# Generated by Django 5.1.1 on 2024-10-24 07:35

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('DISCARDED', 'Discarded'), ('PENDING', 'Pending'), ('REVIEWED', 'Reviewed'), ('IN_PRODUCTION', 'In Production')], default='PENDING', max_length=20)),
                ('project_id', models.UUIDField(editable=False)),
                ('project_title', models.CharField(max_length=255)),
                ('level', models.CharField(blank=True, max_length=255, null=True)),
                ('main_category', models.CharField(blank=True, max_length=255, null=True)),
                ('tailored_category', models.CharField(blank=True, max_length=100, null=True)),
                ('search_string', models.CharField(max_length=255)),
                ('rank', models.IntegerField(default=0)),
                ('search_page_url', models.URLField(blank=True, max_length=500, null=True)),
                ('is_advertisement', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.CharField(blank=True, max_length=50, null=True)),
                ('category_name', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('neighborhood', models.CharField(blank=True, max_length=100, null=True)),
                ('street', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('form_country_id', models.IntegerField(blank=True, null=True)),
                ('form_country_name', models.CharField(blank=True, max_length=255, null=True)),
                ('form_destination_id', models.IntegerField(blank=True, null=True)),
                ('form_destination_name', models.CharField(blank=True, max_length=255, null=True)),
                ('country_code', models.CharField(blank=True, max_length=2, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('place_id', models.CharField(max_length=255, unique=True)),
                ('data_id', models.CharField(blank=True, max_length=255, null=True)),
                ('data_cid', models.CharField(blank=True, max_length=255, null=True)),
                ('reviews_count', models.PositiveIntegerField(default=0)),
                ('rating', models.FloatField(blank=True, null=True)),
                ('scraped_at', models.DateTimeField()),
                ('url', models.URLField(blank=True, max_length=500, null=True)),
                ('website', models.URLField(blank=True, max_length=500, null=True)),
                ('thumbnail', models.URLField(blank=True, max_length=500, null=True)),
                ('types', models.TextField(blank=True, null=True)),
                ('operating_hours', models.JSONField(blank=True, null=True)),
                ('service_options', models.JSONField(blank=True, null=True)),
                ('title_esp', models.CharField(blank=True, max_length=255, null=True)),
                ('title_fr', models.CharField(blank=True, max_length=255, null=True)),
                ('title_eng', models.CharField(blank=True, max_length=255, null=True)),
                ('description_esp', models.TextField(blank=True, null=True)),
                ('description_eng', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Businesses',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Name')),
                ('code', models.CharField(max_length=3, verbose_name='ISO Code')),
                ('phone_code', models.CharField(default=34, max_length=10, verbose_name='Phone code')),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile', models.CharField(blank=True, max_length=15, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdditionalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=100)),
                ('key', models.CharField(max_length=100)),
                ('value', models.BooleanField()),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_info', to='automation.business')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=50, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='automation.category')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='automation.level')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='automation.business')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='automation.category')),
            ],
        ),
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Name')),
                ('cp', models.CharField(blank=True, max_length=12, null=True, verbose_name='CP')),
                ('province', models.CharField(default='Missing province', max_length=100, verbose_name='Province')),
                ('description', models.TextField(default='Missing description', verbose_name='Description')),
                ('link', models.CharField(blank=True, max_length=100, null=True, verbose_name='Link')),
                ('slogan', models.CharField(blank=True, max_length=100, null=True, verbose_name='Slogan')),
                ('latitude', models.DecimalField(decimal_places=27, default=0, max_digits=30, verbose_name='Latitude')),
                ('longitude', models.DecimalField(decimal_places=27, default=0, max_digits=30, verbose_name='Longitude')),
                ('ambassador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ambassador_destinations', to=settings.AUTH_USER_MODEL)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='destinations', to='automation.country', verbose_name='Country')),
            ],
            options={
                'verbose_name': 'Destination',
                'verbose_name_plural': 'Destinations',
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='destinations',
            field=models.ManyToManyField(blank=True, to='automation.destination'),
        ),
        migrations.CreateModel(
            name='OpeningHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(max_length=10)),
                ('hours', models.CharField(max_length=50)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opening_hours', to='automation.business')),
            ],
        ),
        migrations.CreateModel(
            name='ScrapingTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('project_title', models.CharField(max_length=300)),
                ('tailored_category', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('report_url', models.URLField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('QUEUED', 'QUEUED'), ('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('TRANSLATED', 'Translated')], default='PENDING', max_length=20)),
                ('file', models.FileField(upload_to='scraping_files/')),
                ('level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='automation.level')),
                ('main_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='automation.category')),
                ('subcategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks_sub', to='automation.category')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='business',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='businesses', to='automation.scrapingtask'),
        ),
        migrations.CreateModel(
            name='BusinessImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('local_path', models.CharField(blank=True, max_length=255)),
                ('s3_url', models.URLField(blank=True, max_length=500)),
                ('original_url', models.URLField(max_length=500)),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_images', to='automation.business')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['business', 'is_primary'], name='automation__busines_7673b1_idx')],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.URLField(max_length=500)),
                ('local_path', models.CharField(blank=True, max_length=255, null=True)),
                ('order', models.IntegerField(db_index=True, default=0)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='thumbnails/')),
                ('is_approved', models.BooleanField(default=False)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='automation.business')),
            ],
            options={
                'ordering': ['order'],
                'indexes': [models.Index(fields=['business', 'local_path'], name='automation__busines_0b61a0_idx')],
                'unique_together': {('business', 'local_path')},
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=255)),
                ('rating', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('text', models.TextField(blank=True)),
                ('time', models.DateTimeField()),
                ('likes', models.PositiveIntegerField(default=0)),
                ('author_image', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='automation.business')),
            ],
            options={
                'ordering': ['-time'],
                'indexes': [models.Index(fields=['business', '-time'], name='automation__busines_bf2927_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('AMBASSADOR', 'Ambassador'), ('STAFF', 'Staff')], max_length=20)),
                ('destinations', models.ManyToManyField(blank=True, to='automation.destination')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'role')},
            },
        ),
    ]
